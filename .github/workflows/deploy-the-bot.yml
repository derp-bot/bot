name: Deploy the Bot

on:
  push:
    branches:
      - main

env:
  CONTAINER_NAME: drhayes/derp

jobs:
  build:
    name: Build the Docker container
    runs-on: ubuntu-latest
    environment: prod
    env:
      DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
    steps:
      - name: Checkout...
        uses: actions/checkout@v2

      - name: Log into Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin

      - name: Build container
        run: docker build . --file Dockerfile --tag ${CONTAINER_NAME}:latest --tag ${CONTAINER_NAME}:${{ github.sha }}

      - name: Push images
        run: |
          docker push ${CONTAINER_NAME}:latest
          docker push ${CONTAINER_NAME}:${{ github.sha }}

  deploy:
    name: Deploy the Docker container
    runs-on: ubuntu-latest
    needs:
      - build
    environment: prod
    env:
      DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
      VULTR_API_KEY: ${{ secrets.VULTR_API_KEY }}
    steps:
      - name: Checkout...
        uses: actions/checkout@v2

      - name: Find derp-bot host IP
        id: host-ip
        run: |
          DERP_IP=$(curl --silent "https://api.vultr.com/v2/instances?label=derp-bot" -X GET -H "Authorization: Bearer ${VULTR_API_KEY}" | jq --raw-output .instances[0].main_ip)
          echo "::set-output name=derp-ip::$DERP_IP"

      - name: Configure SSH
        env:
          SSH_KEY: ${{ secrets.DERP_PRIVATE_SSH_KEY }}
          SSH_HOST: ${{ steps.host-ip.outputs.derp-ip }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/derp.key
          chmod 600 ~/.ssh/derp.key
          cat >>~/.ssh/config <<END
          Host derp
            HostName $SSH_HOST
            User root
            IdentityFile ~/.ssh/derp.key
            StrictHostKeyChecking no
          END

      - name: Deploy that bot!
        run: bin/deploy.sh

